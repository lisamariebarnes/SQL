-- Creating a table for movies
CREATE TABLE Movies (
    MovieID INT PRIMARY KEY,
    Title VARCHAR(100),
    GenreID INT,
    RatingID INT,
    FOREIGN KEY (GenreID) REFERENCES Genres(GenreID),
    FOREIGN KEY (RatingID) REFERENCES Ratings(RatingID)
);

-- Creating a table for genres
CREATE TABLE Genres (
    GenreID INT PRIMARY KEY,
    Name VARCHAR(50),
    ColorCode VARCHAR(10) -- For color coding each genre
);

-- Creating a table for actors
CREATE TABLE Actors (
    ActorID INT PRIMARY KEY,
    Name VARCHAR(100)
);

-- Creating a table for ratings
CREATE TABLE Ratings (
    RatingID INT PRIMARY KEY,
    Rating FLOAT
);

-- Creating a table for movie actors
CREATE TABLE MovieActors (
    MovieID INT,
    ActorID INT,
    FOREIGN KEY (MovieID) REFERENCES Movies(MovieID),
    FOREIGN KEY (ActorID) REFERENCES Actors(ActorID)
);

-- Creating a table for moods and corresponding genres
CREATE TABLE Moods (
    Mood VARCHAR(50),
    GenreID INT,
    FOREIGN KEY (GenreID) REFERENCES Genres(GenreID)
);

-- Inserting genres
INSERT INTO Genres (GenreID, Name, ColorCode) VALUES
    (1, 'Horror', '#FF0000'),
    (2, 'Romance', '#FF69B4'),
    (3, 'Comedy', '#FFFF00'),
    -- ... More genres ...

-- Inserting moods and linking them to genres
INSERT INTO Moods (Mood, GenreID) VALUES
    ('Happy', 3), -- Comedy
    ('Sad', 2), -- Romance
    ('Angry', 1), -- Horror
    -- ... More moods ...

-- Query to recommend movies based on a mood
-- Here, we are recommending movies for a 'Happy' mood
SELECT
    m.Title AS Movie,
    g.Name AS Genre,
    r.Rating AS Rating
FROM
    Movies m
JOIN Genres g ON m.GenreID = g.GenreID
JOIN Ratings r ON m.RatingID = r.RatingID
JOIN Moods md ON g.GenreID = md.GenreID
WHERE
    md.Mood = 'Happy';
